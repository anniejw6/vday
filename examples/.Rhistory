axis.ticks=element_blank(),
axis.line=element_line(colour = "white"),
legend.position="none",
axis.text.y=element_blank(),
axis.text.x = element_text(colour = "#584F51", size = 12),
axis.title = element_blank(),
panel.border=element_blank(),
panel.background=element_blank(),
panel.grid.minor=element_blank(),
legend.title=element_blank())
svg("friendship.svg", width = 8.25, height = 3.75)
after2
dev.off()
library(animation)
ani.options(interval=c(rep(0.2,17),1))
install.packages("animation")
library(animation)
ani.options(interval=c(rep(0.2,17),1))
saveGIF({
dat<- data.frame(t=seq(0, 2*pi, by=0.05) )
xhrt <- function(t) 16*sin(t)^3
yhrt <- function(t) 13*cos(t)-5*cos(2*t)-2*cos(3*t)-cos(4*t)
dat$x=xhrt(dat$t)
dat$y=yhrt(dat$t)
new.point <- data.frame(x = runif(20000, -20, 20),
y = runif(20000, -20, 20))
new.point$res <- pnt.in.poly(new.point, dat[,-1])[,3]
new <- new.point[new.point$res == 1, -3]
new2 <- rbind(dat[,2:3], new)
x <- c(10, 15, 20, 30, 50, 100, 150, 200, 250, 300, 400, 500, 700, 1000, 2000, 3000, 4500, nrow(new))
# Begin the loop that creates the 150 individual graphs
for (i in 1:length(x)) {
q1 <- ggplot(data.frame(new, random = rnorm(nrow(new)))[sample(1:nrow(new), x[i]),]
, aes(x, y, colour = random)) +
scale_colour_gradient(low = "white", high = "red", space = "Lab") +
geom_point(alpha = 0.5, size = 1) + geom_jitter() + theme_bw()+
#    ggtitle(titles.real[i]) + xlim(c(-16, 16)) + ylim(-14,14) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.position="none",
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
print(q1)
}
})
??pnt.in.poly
install.packages("SDMTools")
libary(SDMTools)
librar()
library(SDMTools)
saveGIF({
dat<- data.frame(t=seq(0, 2*pi, by=0.05) )
xhrt <- function(t) 16*sin(t)^3
yhrt <- function(t) 13*cos(t)-5*cos(2*t)-2*cos(3*t)-cos(4*t)
dat$x=xhrt(dat$t)
dat$y=yhrt(dat$t)
new.point <- data.frame(x = runif(20000, -20, 20),
y = runif(20000, -20, 20))
new.point$res <- pnt.in.poly(new.point, dat[,-1])[,3]
new <- new.point[new.point$res == 1, -3]
new2 <- rbind(dat[,2:3], new)
x <- c(10, 15, 20, 30, 50, 100, 150, 200, 250, 300, 400, 500, 700, 1000, 2000, 3000, 4500, nrow(new))
# Begin the loop that creates the 150 individual graphs
for (i in 1:length(x)) {
q1 <- ggplot(data.frame(new, random = rnorm(nrow(new)))[sample(1:nrow(new), x[i]),]
, aes(x, y, colour = random)) +
scale_colour_gradient(low = "white", high = "red", space = "Lab") +
geom_point(alpha = 0.5, size = 1) + geom_jitter() + theme_bw()+
#    ggtitle(titles.real[i]) + xlim(c(-16, 16)) + ylim(-14,14) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.position="none",
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
print(q1)
}
})
i = 1
q1 <- ggplot(data.frame(new, random = rnorm(nrow(new)))[sample(1:nrow(new), x[i]),]
, aes(x, y, colour = random)) +
scale_colour_gradient(low = "white", high = "red", space = "Lab") +
geom_point(alpha = 0.5, size = 1) + geom_jitter() + theme_bw()+
#    ggtitle(titles.real[i]) + xlim(c(-16, 16)) + ylim(-14,14) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.position="none",
panel.background=element_rect(colour = "#FFFFFB"),
panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
q1
i = 20
length(x)
i = 18
q1 <- ggplot(data.frame(new, random = rnorm(nrow(new)))[sample(1:nrow(new), x[i]),]
, aes(x, y, colour = random)) +
scale_colour_gradient(low = "white", high = "red", space = "Lab") +
geom_point(alpha = 0.5, size = 1) + geom_jitter() + theme_bw()+
#    ggtitle(titles.real[i]) + xlim(c(-16, 16)) + ylim(-14,14) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.position="none",
panel.background=element_rect(colour = "#FFFFFB"),
panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
q1
q1 <- ggplot(data.frame(new, random = rnorm(nrow(new)))[sample(1:nrow(new), x[i]),]
, aes(x, y, colour = random)) +
scale_colour_gradient(low = "white", high = "red", space = "Lab") +
geom_point(alpha = 0.5, size = 1) + geom_jitter() + theme_bw()+
#    ggtitle(titles.real[i]) + xlim(c(-16, 16)) + ylim(-14,14) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.position="none",
#            panel.background=element_rect(colour = "#FFFFFB"),
panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
print(q1)
q1 <- ggplot(data.frame(new, random = rnorm(nrow(new)))[sample(1:nrow(new), x[i]),]
, aes(x, y, colour = random)) +
scale_colour_gradient(low = "white", high = "red", space = "Lab") +
geom_point(alpha = 0.5, size = 1) + geom_jitter() + theme_bw()+
#    ggtitle(titles.real[i]) + xlim(c(-16, 16)) + ylim(-14,14) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.position="none",
panel.background=element_rect(colour = "#123456"),
panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
print(q1)
q1 <- ggplot(data.frame(new, random = rnorm(nrow(new)))[sample(1:nrow(new), x[i]),]
, aes(x, y, colour = random)) +
scale_colour_gradient(low = "white", high = "red", space = "Lab") +
geom_point(alpha = 0.5, size = 1) + geom_jitter() + theme_bw()+
#    ggtitle(titles.real[i]) + xlim(c(-16, 16)) + ylim(-14,14) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.position="none",
panel.background=element_rect(colour = "#FFFFFB"),
plot.background = element_rect(colour = "#FFFFFB")
panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
print(q1)
q1 <- ggplot(data.frame(new, random = rnorm(nrow(new)))[sample(1:nrow(new), x[i]),]
, aes(x, y, colour = random)) +
scale_colour_gradient(low = "white", high = "red", space = "Lab") +
geom_point(alpha = 0.5, size = 1) + geom_jitter() + theme_bw()+
#    ggtitle(titles.real[i]) + xlim(c(-16, 16)) + ylim(-14,14) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.position="none",
panel.background=element_rect(colour = "#FFFFFB"),
plot.background = element_rect(colour = "#FFFFFB"),
panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
print(q1)
saveGIF({
dat<- data.frame(t=seq(0, 2*pi, by=0.05) )
xhrt <- function(t) 16*sin(t)^3
yhrt <- function(t) 13*cos(t)-5*cos(2*t)-2*cos(3*t)-cos(4*t)
dat$x=xhrt(dat$t)
dat$y=yhrt(dat$t)
new.point <- data.frame(x = runif(20000, -20, 20),
y = runif(20000, -20, 20))
new.point$res <- pnt.in.poly(new.point, dat[,-1])[,3]
new <- new.point[new.point$res == 1, -3]
new2 <- rbind(dat[,2:3], new)
x <- c(10, 15, 20, 30, 50, 100, 150, 200, 250, 300, 400, 500, 700, 1000, 2000, 3000, 4500, nrow(new))
# Begin the loop that creates the 150 individual graphs
for (i in 1:length(x)) {
q1 <- ggplot(data.frame(new, random = rnorm(nrow(new)))[sample(1:nrow(new), x[i]),]
, aes(x, y, colour = random)) +
scale_colour_gradient(low = "white", high = "red", space = "Lab") +
geom_point(alpha = 0.5, size = 1) + geom_jitter() + theme_bw()+
#    ggtitle(titles.real[i]) + xlim(c(-16, 16)) + ylim(-14,14) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.position="none",
panel.background=element_rect(colour = "#FFFFFB"),
plot.background = element_rect(colour = "#FFFFFB"),
panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
print(q1)
}
})
dir.create("examples")
setwd("examples")
?wd
??setwd
getwd
getwd()
png(file="example%02d.png", width=200, height=200)
for (i in c(10:1, "G0!")){
plot.new()
text(.5, .5, i, cex = 6)
}
dev.off()
system("convert -delay 80 *.png example_1.gif")
>png
?png
dat<- data.frame(t=seq(0, 2*pi, by=0.05) )
xhrt <- function(t) 16*sin(t)^3
yhrt <- function(t) 13*cos(t)-5*cos(2*t)-2*cos(3*t)-cos(4*t)
dat$x=xhrt(dat$t)
dat$y=yhrt(dat$t)
new.point <- data.frame(x = runif(20000, -20, 20),
y = runif(20000, -20, 20))
new.point$res <- pnt.in.poly(new.point, dat[,-1])[,3]
new <- new.point[new.point$res == 1, -3]
new2 <- rbind(dat[,2:3], new)
x <- c(10, 15, 20, 30, 50, 100, 150, 200, 250, 300, 400, 500, 700, 1000, 2000, 3000, 4500, nrow(new))
png(file="example%02d.png", width=200, height=200)
for (i in 1:length(x)) {
q1 <- ggplot(data.frame(new, random = rnorm(nrow(new)))[sample(1:nrow(new), x[i]),]
, aes(x, y, colour = random)) +
scale_colour_gradient(low = "white", high = "red", space = "Lab") +
geom_point(alpha = 0.5, size = 1) + geom_jitter() + theme_bw()+
#    ggtitle(titles.real[i]) + xlim(c(-16, 16)) + ylim(-14,14) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.position="none",
panel.background=element_rect(colour = "#FFFFFB"),
plot.background = element_rect(colour = "#FFFFFB"),
panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
print(q1)
}
dev.off()
system("convert -delay 80 *.png example_1.gif")
system("convert -delay 10 *.png example_1.gif")
max(new)
min(new)
max(new$x)
max(new$y)
min(new$x)
min(new$y)
dat<- data.frame(t=seq(0, 2*pi, by=0.05) )
xhrt <- function(t) 16*sin(t)^3
yhrt <- function(t) 13*cos(t)-5*cos(2*t)-2*cos(3*t)-cos(4*t)
dat$x=xhrt(dat$t)
dat$y=yhrt(dat$t)
new.point <- data.frame(x = runif(20000, -18, 18),
y = runif(20000, -18, 18))
new.point$res <- pnt.in.poly(new.point, dat[,-1])[,3]
new <- new.point[new.point$res == 1, -3]
new2 <- rbind(dat[,2:3], new)
x <- c(10, 15, 20, 30, 50, 100, 150, 200, 250, 300, 400, 500, 700, 1000, 2000, 3000, 4500, nrow(new))
dat<- data.frame(t=seq(0, 2*pi, by=0.05) )
xhrt <- function(t) 16*sin(t)^3
yhrt <- function(t) 13*cos(t)-5*cos(2*t)-2*cos(3*t)-cos(4*t)
dat$x=xhrt(dat$t)
dat$y=yhrt(dat$t)
new.point <- data.frame(x = runif(20000, -18, 18),
y = runif(20000, -18, 18))
new.point$res <- pnt.in.poly(new.point, dat[,-1])[,3]
new <- new.point[new.point$res == 1, -3]
new2 <- rbind(dat[,2:3], new)
x <- c(10, 15, 20, 30, 50, 75, 100, 150, 200, 250, 300, 350, 400, 500,600, 700, 900, 1000, 1500, 2000, 3000, 4500, nrow(new))
png(file="example%02d.png", width=200, height=200)
for (i in 1:length(x)) {
q1 <- ggplot(data.frame(new, random = rnorm(nrow(new)))[sample(1:nrow(new), x[i]),]
, aes(x, y, colour = random)) +
scale_colour_gradient(low = "white", high = "red", space = "Lab") +
geom_point(alpha = 0.5, size = 1) + geom_jitter() + theme_bw()+
#    ggtitle(titles.real[i]) + xlim(c(-16, 16)) + ylim(-14,14) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.position="none",
panel.background=element_rect(colour = "#FFFFFB"),
plot.background = element_rect(colour = "#FFFFFB"),
panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
print(q1)
}
dev.off()
system("convert -delay 10 *.png example_1.gif")
x[12]
x <- c(5, 10, 15, 20, 25, 30, 50, 60, 75, 100, 125, 150, 200, 250, 300, 350, 400, 500, 700, 900, 1000, 1500, 2000, 3000, 4500, nrow(new))
png(file="example%02d.png", width=200, height=200)
for (i in 1:length(x)) {
q1 <- ggplot(data.frame(new, random = rnorm(nrow(new)))[sample(1:nrow(new), x[i]),]
, aes(x, y, colour = random)) +
scale_colour_gradient(low = "white", high = "red", space = "Lab") +
geom_point(alpha = 0.5, size = 1) + geom_jitter() + theme_bw()+
#    ggtitle(titles.real[i]) + xlim(c(-16, 16)) + ylim(-14,14) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.position="none",
panel.background=element_rect(colour = "#FFFFFB"),
plot.background = element_rect(colour = "#FFFFFB"),
panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
print(q1)
}
dev.off()
system("convert -delay 10 *.png example_1.gif")
x <- c(3, 5, 10, 15, 20, 25, 30, 40, 50, 55, 60, 75, 90, 100, 125, 140, 150, 175, 200, 220, 250, 300, 400, 500, 700, 900, 1000, 2000, 3000, 4500, nrow(new))
png(file="example%02d.png", width=200, height=200)
for (i in 1:length(x)) {
q1 <- ggplot(data.frame(new, random = rnorm(nrow(new)))[sample(1:nrow(new), x[i]),]
, aes(x, y, colour = random)) +
scale_colour_gradient(low = "white", high = "red", space = "Lab") +
geom_point(alpha = 0.5, size = 1) + geom_jitter() + theme_bw()+
#    ggtitle(titles.real[i]) + xlim(c(-16, 16)) + ylim(-14,14) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.position="none",
panel.background=element_rect(colour = "#FFFFFB"),
plot.background = element_rect(colour = "#FFFFFB"),
panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
print(q1)
}
dev.off()
system("convert -delay 10 *.png example_1.gif")
x <- c(3, 5, 10, 15, 20, 25, 30, 40, 50, 55, 60, 75, 90, 100, 125, 140, 150, 175, 200, 220, 250, 300, 400, 500, 700, 900, 1000, 2000, 3000, 4500, nrow(new), nrow(new),nrow(new))
png(file="example%02d.png", width=200, height=200)
for (i in 1:length(x)) {
q1 <- ggplot(data.frame(new, random = rnorm(nrow(new)))[sample(1:nrow(new), x[i]),]
, aes(x, y, colour = random)) +
scale_colour_gradient(low = "white", high = "red", space = "Lab") +
geom_point(alpha = 0.5, size = 1) + geom_jitter() + theme_bw()+
#    ggtitle(titles.real[i]) + xlim(c(-16, 16)) + ylim(-14,14) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.position="none",
panel.background=element_rect(colour = "#FFFFFB"),
plot.background = element_rect(colour = "#FFFFFB"),
panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
print(q1)
}
dev.off()
system("convert -delay 10 *.png example_1.gif")
x <- c(3, 5, 10, 15, 20, 25, 30, 40, 50, 55, 60, 75, 90, 100, 125, 140, 150, 175, 200, 220, 250, 300, 400, 500, 700, 900, 1000, 2000, 3000, 4500, rep(nrow(new), 6))
png(file="example%02d.png", width=200, height=200)
for (i in 1:length(x)) {
q1 <- ggplot(data.frame(new, random = rnorm(nrow(new)))[sample(1:nrow(new), x[i]),]
, aes(x, y, colour = random)) +
scale_colour_gradient(low = "white", high = "red", space = "Lab") +
geom_point(alpha = 0.5, size = 1) + geom_jitter() + theme_bw()+
#    ggtitle(titles.real[i]) + xlim(c(-16, 16)) + ylim(-14,14) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.position="none",
panel.background=element_rect(colour = "#FFFFFB"),
plot.background = element_rect(colour = "#FFFFFB"),
panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
print(q1)
}
dev.off()
system("convert -delay 10 *.png example_1.gif")
x <- c(3, 5, 10, 15, 20, 25, 30, 40, 50, 55, 60, 75, 90, 100, 125, 140, 150, 175, 200, 220, 250, 300, 400, 500, 700, 900, 1000, 2000, 3000, 4500, rep(nrow(new), 10))
png(file="example%02d.png", width=200, height=200)
for (i in 1:length(x)) {
q1 <- ggplot(data.frame(new, random = rnorm(nrow(new)))[sample(1:nrow(new), x[i]),]
, aes(x, y, colour = random)) +
scale_colour_gradient(low = "white", high = "red", space = "Lab") +
geom_point(alpha = 0.5, size = 1) + geom_jitter() + theme_bw()+
#    ggtitle(titles.real[i]) + xlim(c(-16, 16)) + ylim(-14,14) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.position="none",
panel.background=element_rect(colour = "#FFFFFB"),
plot.background = element_rect(colour = "#FFFFFB"),
panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
print(q1)
}
dev.off()
system("convert -delay 10 *.png example_1.gif")
system("convert -delay 10 *.png example_1.gif")
system("convert -delay 10 *.png example_1.gif")
x <- c(3, 5, 10, 15, 20, 25, 30, 40, 50, 55, 60, 75, 90, 100, 125, 140, 150, 175, 200, 220, 250, 300, 400, 500, 700, 900, 1000, 2000, 3000, 4500, rep(nrow(new), 6))
png(file="example%02d.png", width=200, height=200)
for (i in 1:length(x)) {
q1 <- ggplot(data.frame(new, random = rnorm(nrow(new)))[sample(1:nrow(new), x[i]),]
, aes(x, y, colour = random)) +
scale_colour_gradient(low = "white", high = "red", space = "Lab") +
geom_point(alpha = 0.5, size = 1) + geom_jitter() + theme_bw()+
#    ggtitle(titles.real[i]) + xlim(c(-16, 16)) + ylim(-14,14) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.position="none",
panel.background=element_rect(colour = "#FFFFFB"),
plot.background = element_rect(colour = "#FFFFFB"),
panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
print(q1)
}
dev.off()
system("convert -delay 15 *.png example_1.gif")
x <- c(3, 5, 10, 15, 20, 25, 30, 40, 50, 55, 60, 75, 90, 100, 125, 140, 150, 175, 200, 220, 250, 300, 400, 500, 700, 900, 1000, 2000, 3000, 4500, rep(nrow(new), 2))
png(file="example%02d.png", width=200, height=200)
for (i in 1:length(x)) {
q1 <- ggplot(data.frame(new, random = rnorm(nrow(new)))[sample(1:nrow(new), x[i]),]
, aes(x, y, colour = random)) +
scale_colour_gradient(low = "white", high = "red", space = "Lab") +
geom_point(alpha = 0.5, size = 1) + geom_jitter() + theme_bw()+
#    ggtitle(titles.real[i]) + xlim(c(-16, 16)) + ylim(-14,14) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.position="none",
panel.background=element_rect(colour = "#FFFFFB"),
plot.background = element_rect(colour = "#FFFFFB"),
panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
print(q1)
}
dev.off()
system("convert -delay 12 *.png example_1.gif")
system("convert -delay 12 *.png example_1.gif")
x <- c(3, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 75, 90, 100, 125, 140, 150, 175, 200, 220, 250, 300, 400, 500, 700, 900, 1000, 2000, 3000, 4500, rep(nrow(new), 2))
png(file="example%02d.png", width=200, height=200)
for (i in 1:length(x)) {
q1 <- ggplot(data.frame(new, random = rnorm(nrow(new)))[sample(1:nrow(new), x[i]),]
, aes(x, y, colour = random)) +
scale_colour_gradient(low = "white", high = "red", space = "Lab") +
geom_point(alpha = 0.5, size = 1) + geom_jitter() + theme_bw()+
#    ggtitle(titles.real[i]) + xlim(c(-16, 16)) + ylim(-14,14) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.position="none",
panel.background=element_rect(colour = "#FFFFFB"),
plot.background = element_rect(colour = "#FFFFFB"),
panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
print(q1)
}
dev.off()
system("convert -delay 12 *.png example_1.gif")
x <- c(3, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 75, 90, 100, 125, 140, 150, 175, 200, 220, 250, 300, 400, 500, 700, 900, 1000, 2000, 3000, 4500, rep(nrow(new), 2))
png(file="example%02d.png", width=200, height=200)
for (i in 1:length(x)) {
q1 <- ggplot(data.frame(new, random = rnorm(nrow(new)))[sample(1:nrow(new), x[i]),]
, aes(x, y, colour = random)) +
scale_colour_gradient(low = "white", high = "red", space = "Lab") +
geom_point(alpha = 0.5, size = 1) + geom_jitter() + theme_bw()+
#    ggtitle(titles.real[i]) + xlim(c(-16, 16)) + ylim(-14,14) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.position="none",
panel.background=element_rect(colour = "#FFFFFB"),
plot.background = element_rect(colour = "#FFFFFB"),
panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
print(q1)
}
system("convert -delay 12 *.png example_1.gif")
system("convert -delay 11 *.png example_1.gif")
rep(c("Couples", "Singles"),2)
rep(c("Couples", "Singles"), each = 2)
df1 <- data.frame(sex       = factor(rep(c("Couples", "Singles"), each = 2)),
time      = factor(rep(c("February 13", "February 14"), each = 2),
rm(list=ls())
df1 <- data.frame(type       = factor(rep(c("Couples", "Singles"), each = 2)),
date      = factor(rep(c("February 13", "February 14"), each = 2),
levels=c("February 13","February 14")),
friend= c(40, 15, 45, 95))
ggplot(df1, aes(date, friend, fill = type)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
scale_fill_manual(values=c("#999999", "#E69F00"))
ggplot(df1, aes(date, friend, fill = type)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
scale_fill_manual(values=c("#999999", "#E69F00"))
dev.off()
ggplot(df1, aes(date, friend, fill = type)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
scale_fill_manual(values=c("#999999", "#E69F00"))
colors <- c("#d7b5d8","#df65b0")
ggplot(df1, aes(date, friend, fill = type)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
scale_fill_manual(values=colors)
ggplot(df1, aes(date, friend, fill = type)) +
geom_bar(stat="identity", position = position_dodge()) +
scale_fill_manual(values=colors)
df1
df1
summary(df1)
ggplot(df1, aes(x = date, y = friend, fill = type)) +
geom_bar(stat="identity", position = position_dodge()) +
scale_fill_manual(values=colors)
ggplot(df1, aes(x = date, y = friend, fill = type)) +
geom_bar(stat="identity", position = position_dodge()) +
scale_fill_manual(values=colors)
ggplot(df1, aes(x = date, y = friend, fill = type)) +
geom_bar(stat="identity", position = position_dodge()) +
scale_fill_manual(values=colors)
ggplot(df1, aes(x = date, y = friend, fill = type)) +
geom_bar(stat="identity", position = position_dodge()) +
scale_fill_manual(values=colors)
rm(list=ls())
